<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<doc>
    <constantsCategories/>
    <conceptList>
        <concept id="action"/>
        <concept id="agent_location"/>
        <concept id="agent_movement"/>
        <concept id="algorithm"/>
        <concept id="architecture"/>
        <concept id="arithmetic"/>
        <concept id="asc"/>
        <concept id="attribute"/>
        <concept id="autosave"/>
        <concept id="background"/>
        <concept id="batch"/>
        <concept id="bdi"/>
        <concept id="behavior"/>
        <concept id="camera"/>
        <concept id="cast"/>
        <concept id="chart"/>
        <concept id="clustering"/>
        <concept id="color"/>
        <concept id="comodel"/>
        <concept id="comparison"/>
        <concept id="communication"/>
        <concept id="condition"/>
        <concept id="constant"/>
        <concept id="container"/>
        <concept id="csv"/>
        <concept id="cycle"/>
        <concept id="date"/>
        <concept id="database"/>
        <concept id="dem"/>
        <concept id="dgs"/>
        <concept id="diffusion"/>
        <concept id="dimension"/>
        <concept id="display"/>
        <concept id="distribution"/>
        <concept id="dxf"/>
        <concept id="edge"/>
        <concept id="elevation"/>
        <concept id="enumeration"/>
        <concept id="equation"/>
        <concept id="experiment"/>
        <concept id="facet"/>
        <concept id="file"/>
        <concept id="filter"/>
        <concept id="fipa"/>
        <concept id="fsm"/>
        <concept id="geometry"/>
        <concept id="gis"/>
        <concept id="global"/>
        <concept id="graph"/>
        <concept id="graph_weight"/>
        <concept id="gml"/>
        <concept id="grid"/>
        <concept id="graphic"/>
        <concept id="graphic_unit"/>
        <concept id="gui"/>
        <concept id="halt"/>
        <concept id="headless"/>
        <concept id="hydrology"/>
        <concept id="image"/>
        <concept id="import"/>
        <concept id="inheritance"/>
        <concept id="init"/>
        <concept id="inspector"/>
        <concept id="layer"/>
        <concept id="length_unit"/>
        <concept id="light"/>
        <concept id="list"/>
        <concept id="load_file"/>
        <concept id="logical"/>
        <concept id="loop"/>
        <concept id="matrix"/>
        <concept id="math"/>
        <concept id="map"/>
        <concept id="mirror"/>
        <concept id="model"/>
        <concept id="monitor"/>
        <concept id="multi_level"/>
        <concept id="multi_criteria"/>
        <concept id="multi_simulation"/>
        <concept id="neighbors"/>
        <concept id="network"/>
        <concept id="nil"/>
        <concept id="node"/>
        <concept id="obj"/>
        <concept id="obstacle"/>
        <concept id="opengl"/>
        <concept id="operator"/>
        <concept id="optimization"/>
        <concept id="osm"/>
        <concept id="output"/>
        <concept id="overlay"/>
        <concept id="parameter"/>
        <concept id="pause"/>
        <concept id="permanent"/>
        <concept id="physics_engine"/>
        <concept id="point"/>
        <concept id="probability"/>
        <concept id="pseudo_variable"/>
        <concept id="r"/>
        <concept id="random"/>
        <concept id="random_operator"/>
        <concept id="raster"/>
        <concept id="regression"/>
        <concept id="reflex"/>
        <concept id="refresh"/>
        <concept id="save_file"/>
        <concept id="scheduler"/>
        <concept id="serialize"/>
        <concept id="shape"/>
        <concept id="shapefile"/>
        <concept id="shortest_path"/>
        <concept id="skill"/>
        <concept id="sound"/>
        <concept id="spatial_computation"/>
        <concept id="spatial_relation"/>
        <concept id="spatial_transformation"/>
        <concept id="species"/>
        <concept id="sport"/>
        <concept id="statistic"/>
        <concept id="string"/>
        <concept id="surface_unit"/>
        <concept id="svg"/>
        <concept id="system"/>
        <concept id="task_based"/>
        <concept id="ternary"/>
        <concept id="text"/>
        <concept id="texture"/>
        <concept id="test"/>
        <concept id="3d"/>
        <concept id="tif"/>
        <concept id="time"/>
        <concept id="time_unit"/>
        <concept id="topology"/>
        <concept id="torus"/>
        <concept id="transport"/>
        <concept id="txt"/>
        <concept id="type"/>
        <concept id="update"/>
        <concept id="volume_unit"/>
        <concept id="weight_unit"/>
        <concept id="write"/>
        <concept id="xml"/>
        <concept id="world"/>
    </conceptList>
    <constants/>
    <operatorsCategories>
        <category id="Iterator operators"/>
        <category id="Queue-related operators"/>
        <category id="Stack-related operators"/>
    </operatorsCategories>
    <operators>
        <operator HAS_TESTS="true" alphabetOrder="nr" id="pop" name="pop">
            <operatorCategories>
                <category id="Queue-related operators"/>
                <category id="Stack-related operators"/>
            </operatorCategories>
            <concepts>
                <concept id="queue"/>
                <concept id="stack"/>
            </concepts>
            <combinaisonIO>
                <operands class="irit/gama/util/deque/IDequeOperator.java" contentType="-13" returnType="unknown" type="-299">
                    <operand name="irit.gama.util.deque.idequeoperator&lt;t&gt;" position="0" type="irit.gama.util.deque.IDequeOperator&lt;unknown&gt;"/>
                </operands>
            </combinaisonIO>
            <documentation>
                <result masterDoc="true">retrieves and removes the first available element of this container, or returns null if this container is empty</result>
                <comment>the pop operator behavior depends on the nature of the operand</comment>
                <usages>
                    <usage descUsageElt="pop return and remove the first object of the container">
                        <examples>
                            <example code="pop(stack([1, 2]))" equals="2" isExecutable="true" isTestOnly="false" test="true" type="unknown"/>
                            <example code="pop(queue([1, 2]))" equals="1" isExecutable="true" isTestOnly="false" test="true" type="unknown"/>
                        </examples>
                    </usage>
                </usages>
            </documentation>
        </operator>
        <operator alphabetOrder="nr" id="queue" name="queue">
            <operatorCategories>
                <category id="Types-related operators"/>
            </operatorCategories>
            <concepts>
                <concept id="type"/>
                <concept id="container"/>
                <concept id="queue"/>
            </concepts>
            <combinaisonIO>
                <operands class="irit.gaml.types.GamaQueueType" contentType="" returnType="queue" type="">
                    <operand name="val" position="0" type="any"/>
                </operands>
            </combinaisonIO>
            <documentation>
                <result>casts the operand in a queue object.</result>
            </documentation>
        </operator>
        <operator alphabetOrder="sz" id="stack" name="stack">
            <operatorCategories>
                <category id="Types-related operators"/>
            </operatorCategories>
            <concepts>
                <concept id="type"/>
                <concept id="container"/>
                <concept id="stack"/>
            </concepts>
            <combinaisonIO>
                <operands class="irit.gaml.types.GamaStackType" contentType="" returnType="stack" type="">
                    <operand name="val" position="0" type="any"/>
                </operands>
            </combinaisonIO>
            <documentation>
                <result>casts the operand in a stack object.</result>
            </documentation>
        </operator>
    </operators>
    <skills/>
    <architectures>
        <architecture id="event_manager" name="event_manager">
            <vars>
                <var constant="false" depends_on="" name="size" type="int">
                    <documentation>
                        <result>Return the size of the all queues</result>
                    </documentation>
                </var>
            </vars>
            <actions/>
            <concepts>
                <concept id="behavior"/>
                <concept id="architecture"/>
            </concepts>
        </architecture>
    </architectures>
    <speciess/>
    <insideStatementKinds>
        <insideStatementKind symbol="Behavior"/>
        <insideStatementKind symbol="Sequence of statements or action"/>
        <insideStatementKind symbol="Layer"/>
    </insideStatementKinds>
    <insideStatementSymbols>
        <insideStatementSymbol symbol="chart"/>
    </insideStatementSymbols>
    <statementsKinds>
        <kind symbol="Single statement"/>
    </statementsKinds>
    <statements>
        <statement id="push" kind="Single statement" name="push">
            <facets>
                <facet name="item" omissible="true" optional="false" type="any type">
                    <documentation>
                        <result>any expression to add in the deque</result>
                    </documentation>
                </facet>
                <facet name="to" omissible="false" optional="false" type="any type in [stack, queue]">
                    <documentation>
                        <result>the stack or queue</result>
                    </documentation>
                </facet>
            </facets>
            <documentation>
                <result>Allows to add, i.e. to insert, a new element in a deque</result>
                <usages>
                    <usage descUsageElt="The new element can be added either at the end of the deque">
                        <examples>
                            <example code="push expr to: stack;&#9;&#9;// Add at the end" isExecutable="false" isTestOnly="false" test="false"/>
                            <example code="push expr to: queue;&#9;&#9;// Add at the end" isExecutable="false" isTestOnly="false" test="false"/>
                        </examples>
                    </usage>
                </usages>
            </documentation>
            <inside>
                <symbols>
                    <symbol>chart</symbol>
                </symbols>
                <kinds>
                    <kind>Behavior</kind>
                    <kind>Sequence of statements or action</kind>
                    <kind>Layer</kind>
                </kinds>
            </inside>
            <concepts>
                <concept id="stack"/>
                <concept id="queue"/>
            </concepts>
        </statement>
    </statements>
    <files/>
    <types>
        <type id="667" kind="102" name="queue">
            <documentation>
                <result>Queue</result>
            </documentation>
            <concepts>
                <concept id="type"/>
                <concept id="container"/>
                <concept id="queue"/>
            </concepts>
        </type>
        <type id="668" kind="102" name="stack">
            <documentation>
                <result>Stack</result>
            </documentation>
            <concepts>
                <concept id="type"/>
                <concept id="container"/>
                <concept id="stack"/>
            </concepts>
        </type>
    </types>
</doc>
